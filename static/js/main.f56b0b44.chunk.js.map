{"version":3,"sources":["icons/engine.svg","icons/info-icon.svg","icons/globe.svg","constants/actionTypes.js","store/initialState.js","reducers/flightConditionsReducer.js","reducers/chooseCurrencyReducer.js","reducers/sortFlightsReducer.js","reducers/requestFlightsReducer.js","reducers/rootReducer.js","store/store.js","components/icon/Icon.jsx","components/list-group/ListGroup.jsx","components/list-group/ListGroupItem.jsx","components/radio-button/RadioButton.jsx","components/radio-button-group/RadioButtonGroup.jsx","actions/chooseCurrency.js","actions/convertCurrency.js","containers/currency-block-container/CurrencyBlockContainer.jsx","components/checkbox/Checkbox.jsx","data/tickets-array.js","actions/requestFlights.js","actions/chooseFlights.js","containers/filters-container/FlightStopsFilterContainer.jsx","layout/aside/Aside.jsx","actions/toggleFligtsSortFilter.js","containers/filters-container/FlightSortFilterContainer.jsx","components/preloader/Preloader.jsx","components/button/Button.jsx","components/flight-card/FlightCard.jsx","components/info-card/InfoCard.jsx","containers/flight-card-container/FlightCardContainer.jsx","layout/main/Main.jsx","layout/app-layout/AppLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FLIGHT_CONDITION_CHOICE","TOGGLE_FLIGHTS_SORT_FILTER","REQUEST_FLIGHTS","RECEIVE_FLIGHTS_MOCK","CHOOSE_CURRENCY","CONVERT_UAH_TO_USD","CONVERT_UAH_TO_EUR","initialState","currency","id","name","value","label","currencyUnicodeSymbol","checked","flightSearchConditions","flightSortFilter","flightVariants","isReceived","flights","flightConditionsReducer","state","arguments","length","undefined","action","type","stopsQuantityList","payload","map","ticket","stops","isAllStopsQuantityEqual","every","val","maxQuantity","Math","max","minQuantity","min","createStopsFilter","stopsQuantity","flightStopsFilter","i","stopLabelInRussian","concat","push","Object","assign","newFligtCondition","item","allFlightsItem","find","otherFlightsVariants","filter","isOtherFlightsChecked","chooseCurrencyReducer","newCurrency","choosedCurrency","flight","price","round","UAHPerUSD","UAHPerEUR","sortFlightsReducer","newState","requestFlightsReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Icon","_ref","src","alt","className","attrs","classes","classNames","React","createElement","defaultProps","ListGroup","children","tag","Tag","horizontal","ListGroupItem","RadioButton","onChange","simpleButtonView","htmlFor","RadioButtonGroup","vertical","chooseCurrency","fetchUSDSaleRate","url","checkedCurrency","dispatch","fetch","mode","then","response","ok","Error","statusText","json","currencyData","ccy","Number","sale","currencySale","USDSaleRate","convertUAHToUSD","catch","fetchEURSaleRate","EURSaleRate","convertUAHToEUR","CurrencyBlockContainer","Component","constructor","props","super","this","handleCurrencyChange","bind","event","changeCurrency","convertPriceToUSD","convertPriceToEUR","target","render","key","connect","Checkbox","TICKETS","origin","origin_name","destination","destination_name","departure_date","departure_time","arrival_date","arrival_time","carrier","requestFlightsMock","setTimeout","getFlightsMock","flightConditionChoice","FlightStopsFilterContainer","handleFlightStopsChange","componentDidMount","fetchData","Aside","toggleFlightsSortFilter","FlightSortFilterContainer","handleFlightsSortChange","toggleSortFilter","Preloader","preloaderIcon","Button","onClick","disabled","active","href","e","preventDefault","FlightCard","currencySymbol","originName","departureTime","departureDate","arrivalTime","arrivalDate","destinationName","transferCount","InfoCard","flightsQuantity","infoHeaderMessage","Fragment","FlightCardContainer","isFlightVariantsReceived","ticketsList","some","notCheckedFlights","infoIcon","uuidv1","Main","AppLayout","iconLogo","App","Boolean","window","location","hostname","match","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f56b0b44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/engine.e2219a28.svg\";","module.exports = __webpack_public_path__ + \"static/media/info-icon.81a21cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/globe.951e1682.svg\";","// Common actions\nexport const TOGGLE_RADIOBUTTON = 'TOGGLE_RADIOBUTTON';\n\n// Actions with flights\nexport const FLIGHT_CONDITION_CHOICE = 'FLIGHT_CONDITION_CHOICE';\nexport const GENERATE_FLIGHT_STOPS_FILTER = 'GENERATE_FLIGHT_STOPS_FILTER';\nexport const TOGGLE_FLIGHTS_SORT_FILTER = 'TOGGLE_FLIGHTS_SORT_FILTER';\nexport const REQUEST_FLIGHTS = 'REQUEST_FLIGHTS';\nexport const RECEIVE_FLIGHTS = 'RECEIVE_FLIGHTS';\nexport const RECEIVE_FLIGHTS_MOCK = 'RECEIVE_FLIGHTS_MOCK';\nexport const RECEIVE_AIRLINE_LOGO = 'RECEIVE_AIRLINE_LOGO';\n\n// Actions with currencies\nexport const CHOOSE_CURRENCY = 'CHOOSE_CURRENCY';\nexport const CONVERT_UAH_TO_USD = 'CONVERT_UAH_TO_USD';\nexport const CONVERT_UAH_TO_EUR = 'CONVERT_UAH_TO_EUR';\n","const initialState = {\n  currency: [\n    {\n      id: 'input-currency-uah',\n      name: 'currency',\n      value: 'uah',\n      label: 'UAH',\n      currencyUnicodeSymbol: '\\u20B4',\n      checked: true,\n    },\n    {\n      id: 'input-currency-usd',\n      name: 'currency',\n      value: 'usd',\n      label: 'USD',\n      currencyUnicodeSymbol: '\\u0024',\n      checked: false,\n    },\n    {\n      id: 'input-currency-eur',\n      name: 'currency',\n      value: 'eur',\n      label: 'EUR',\n      currencyUnicodeSymbol: '\\u20AC',\n      checked: false,\n    },\n  ],\n  flightSearchConditions: [],\n  flightSortFilter: [\n    {\n      id: 'input-sort-cheapest',\n      name: 'sort-filter',\n      value: 'cheapest',\n      label: 'Самый дешевый',\n      checked: true,\n    },\n    {\n      id: 'input-sort-faster',\n      name: 'sort-filter',\n      value: 'faster',\n      label: 'Самый быстрый',\n      checked: false,\n    },\n  ],\n  flightVariants: {\n    isReceived: false,\n    flights: [],\n  },\n};\n\nexport default initialState;\n","import { RECEIVE_FLIGHTS_MOCK, FLIGHT_CONDITION_CHOICE } from '../constants/actionTypes';\nimport initialState from '../store/initialState';\n\nfunction flightConditionsReducer(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_FLIGHTS_MOCK:\n    {\n      const tickets = action.payload;\n      const stopsQuantityList = tickets.map(ticket => ticket.stops);\n      const isAllStopsQuantityEqual = stopsQuantityList.every(val => val === stopsQuantityList[0]);\n      const maxQuantity = Math.max(...stopsQuantityList);\n      const minQuantity = Math.min(...stopsQuantityList);\n\n      const createStopsFilter = (stopsQuantity) => {\n        let flightStopsFilter;\n        if (isAllStopsQuantityEqual || stopsQuantityList.length === 1) {\n          flightStopsFilter = [];\n        } else {\n          flightStopsFilter = [\n            {\n              id: 'input-transfer-all',\n              name: 'transfer',\n              value: 'transfer-all',\n              label: 'Усі',\n              checked: true,\n              stops: 'all',\n            },\n          ];\n        }\n\n        for (let i = minQuantity; i <= stopsQuantity; i += 1) {\n          let stopLabelInRussian;\n          if (i === 0) {\n            stopLabelInRussian = 'Без пересадок';\n          }\n          if (i === 1) {\n            stopLabelInRussian = `${i} пересадка`;\n          }\n          if (i >= 2 && i <= 4) {\n            stopLabelInRussian = `${i} пересадки`;\n          }\n          if (i > 4) {\n            stopLabelInRussian = `${i} пересадок`;\n          }\n          flightStopsFilter.push({\n            id: `input-transfer_${i}`,\n            name: 'transfer',\n            value: `transfer_${i}`,\n            label: `${stopLabelInRussian}`,\n            checked: true,\n            stops: i,\n          });\n        }\n\n        return flightStopsFilter;\n      };\n\n      return Object.assign({}, state, { flightSearchConditions: createStopsFilter(maxQuantity) });\n    }\n\n    case FLIGHT_CONDITION_CHOICE:\n    {\n      const newFligtCondition = state.flightSearchConditions.map((item) => {\n        // Common case\n        if (item.value === action.payload.value) {\n          return Object.assign({}, item, { checked: action.payload.checked });\n        }\n\n        /**\n         * 1-st case.\n         * If the 'transfer-all' item is checked, each other will be checked.\n         * And vice versa.\n         */\n        if (action.payload.value === 'transfer-all') {\n          return Object.assign(\n            {},\n            item,\n            { checked: action.payload.checked },\n          );\n        }\n\n        /**\n         * 2-nd case.\n         * If at least one item except 'transfer-all' is unchecked - 'transfer-all' marked as unchecked.\n         */\n        if (action.payload.value !== 'transfer-all' && item.value === 'transfer-all' && item.checked) {\n          return Object.assign(\n            {},\n            item,\n            { checked: action.payload.checked },\n          );\n        }\n\n        /**\n         * 3-rd case.\n         * If all items except 'transfer-all' item are checked,\n         * and 'transfer-all' unchecked at that moment - set 'transfer-all' checked = true.\n         */\n        const allFlightsItem = state.flightSearchConditions.find(i => i.value === 'transfer-all');\n        const otherFlightsVariants = state.flightSearchConditions.filter(i => i.value !== 'transfer-all');\n        const isOtherFlightsChecked = otherFlightsVariants.filter(i => i.checked);\n\n        if (action.payload.value !== 'transfer-all'\n            && action.payload.checked\n            && isOtherFlightsChecked.length === otherFlightsVariants.length - 1) {\n          allFlightsItem.checked = true;\n        }\n\n        return item;\n      });\n\n      const newFlightConditionState = Object.assign(\n        {},\n        state,\n        { flightSearchConditions: newFligtCondition },\n      );\n      return newFlightConditionState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default flightConditionsReducer;\n","import { CHOOSE_CURRENCY, CONVERT_UAH_TO_USD, CONVERT_UAH_TO_EUR } from '../constants/actionTypes';\nimport initialState from '../store/initialState';\n\nfunction chooseCurrencyReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHOOSE_CURRENCY:\n    {\n      const newCurrency = state.currency.map((item) => {\n        if (item.value === action.payload.currency) {\n          return Object.assign({}, item, { checked: true });\n        }\n        return Object.assign({}, item, { checked: false });\n      });\n\n      const newCurrencyState = Object.assign({}, state, { currency: newCurrency });\n      return newCurrencyState;\n    }\n\n    case CONVERT_UAH_TO_USD:\n    {\n      const choosedCurrency = state.currency.map((item) => {\n        if (item.value === action.payload.value) {\n          return initialState.flightVariants.map(flight => Object.assign(\n            {},\n            flight,\n            { price: Math.round(flight.price / action.payload.UAHPerUSD) },\n          ));\n        }\n        return initialState.flightVariants;\n      });\n\n      return Object.assign({}, state, { flightVariants: choosedCurrency[1] });\n    }\n\n    case CONVERT_UAH_TO_EUR:\n    {\n      const choosedCurrency = state.currency.map((item) => {\n        if (item.value === action.payload.value) {\n          return initialState.flightVariants.map(flight => Object.assign(\n            {},\n            flight,\n            { price: Math.round(flight.price / action.payload.UAHPerEUR) },\n          ));\n        }\n        return state.flightVariants.map(flight => Object.assign(\n          {},\n          flight,\n          { price: flight.price },\n        ));\n      });\n\n      return Object.assign({}, state, { flightVariants: choosedCurrency[2] });\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default chooseCurrencyReducer;\n","import { TOGGLE_FLIGHTS_SORT_FILTER } from '../constants/actionTypes';\nimport initialState from '../store/initialState';\n\nfunction sortFlightsReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_FLIGHTS_SORT_FILTER:\n    {\n      const newState = state.flightSortFilter.map((item) => {\n        if (item.value === action.payload.value) {\n          return Object.assign({}, item, { checked: true });\n        }\n        return Object.assign({}, item, { checked: false });\n      });\n\n      const newSortFilterState = Object.assign({}, state, { flightSortFilter: newState });\n      return newSortFilterState;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default sortFlightsReducer;\n","import { REQUEST_FLIGHTS, RECEIVE_FLIGHTS_MOCK } from '../constants/actionTypes';\nimport initialState from '../store/initialState';\n\nfunction requestFlightsReducer(state = initialState.flightVariants, action) {\n  switch (action.type) {\n    case REQUEST_FLIGHTS:\n    {\n      const newFlightsState = Object.assign(\n        {},\n        state,\n        { isReceived: true, flights: action.payload },\n      );\n      return newFlightsState;\n    }\n\n    case RECEIVE_FLIGHTS_MOCK: {\n      const newFlightsState = Object.assign(\n        {},\n        state,\n        { isReceived: true, flights: action.payload },\n      );\n      return newFlightsState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default requestFlightsReducer;\n","import { combineReducers } from 'redux';\nimport flightConditionsReducer from './flightConditionsReducer';\nimport chooseCurrencyReducer from './chooseCurrencyReducer';\nimport sortFlightsReducer from './sortFlightsReducer';\nimport requestFlightsReducer from './requestFlightsReducer';\nimport convertCurrencyReducer from './convertCurrencyReducer';\n\nconst rootReducer = combineReducers({\n  currency: chooseCurrencyReducer,\n  flightSearchConditions: flightConditionsReducer,\n  flightSortFilter: sortFlightsReducer,\n  flightVariants: requestFlightsReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/rootReducer';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Icon.css';\n\nfunction Icon({\n  src, alt, className, ...attrs\n}) {\n  const classes = classNames(\n    'icon-default',\n    className,\n  );\n\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={classes}\n      {...attrs}\n    />\n  );\n}\n\nIcon.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  className: '',\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './ListGroup.css';\n\nfunction ListGroup({\n  children, className, tag: Tag, horizontal, ...attrs\n}) {\n  const classes = classNames(\n    'list-group',\n    className,\n    { horizontal },\n  );\n\n  return (\n    <Tag className={classes} {...attrs}>\n      {children}\n    </Tag>\n  );\n}\n\nListGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  horizontal: PropTypes.bool,\n};\n\nListGroup.defaultProps = {\n  children: 'Default button',\n  className: '',\n  tag: 'ul',\n  horizontal: false,\n};\n\nexport default ListGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './ListGroupItem.css';\n\nfunction ListGroupItem({\n  children, className, tag: Tag, ...attrs\n}) {\n  const classes = classNames(\n    'list-group-item',\n    className,\n  );\n\n  return (\n    <Tag className={classes} {...attrs}>\n      {children}\n    </Tag>\n  );\n}\n\nListGroupItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n};\n\nListGroupItem.defaultProps = {\n  children: null,\n  className: '',\n  tag: 'li',\n};\n\nexport default ListGroupItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './RadioButton.css';\n\nfunction RadioButton({\n  id, type = 'radio', className, name, value, checked = true, onChange, label, simpleButtonView, ...attrs\n}) {\n  const classes = classNames(\n    'input-radio-default',\n    className,\n    { simpleButtonView },\n  );\n\n  if (simpleButtonView) {\n    return (\n      <label htmlFor={id} className=\"input-label\">\n        <input\n          id={id}\n          type={type}\n          className={classes}\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={onChange}\n          {...attrs}\n        />\n        <span className=\"radio-check-box\">\n          {label}\n        </span>\n      </label>\n    );\n  }\n\n  return (\n    <label htmlFor={id} className=\"input-label\">\n      <input\n        id={id}\n        type={type}\n        className={classes}\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        {...attrs}\n      />\n      <span className=\"radio-check-box\" />\n      {label}\n    </label>\n  );\n}\n\nRadioButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  simpleButtonView: PropTypes.bool,\n};\n\nRadioButton.defaultProps = {\n  className: '',\n  onChange: () => { },\n  label: 'Default label',\n  simpleButtonView: false,\n};\n\nexport default RadioButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './RadioButtonGroup.css';\n\nfunction RadioButtonGroup({ children, className, vertical }) {\n  const classes = classNames(\n    'radio-btn-group',\n    className,\n    { vertical },\n  );\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n}\n\nRadioButtonGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  vertical: PropTypes.bool,\n};\n\nRadioButtonGroup.defaultProps = {\n  children: null,\n  className: '',\n  vertical: false,\n};\n\nexport default RadioButtonGroup;\n","import { CHOOSE_CURRENCY } from '../constants/actionTypes';\n\nfunction chooseCurrency(currency) {\n  return {\n    type: CHOOSE_CURRENCY,\n    payload: { currency },\n  };\n}\n\nexport default chooseCurrency;\n","import { CONVERT_UAH_TO_USD, CONVERT_UAH_TO_EUR } from '../constants/actionTypes';\n\nexport function convertUAHToUSD(UAHPerUSD, value) {\n  return {\n    type: CONVERT_UAH_TO_USD,\n    payload: { UAHPerUSD, value },\n  };\n}\n\nexport function convertUAHToEUR(UAHPerEUR, value) {\n  return {\n    type: CONVERT_UAH_TO_EUR,\n    payload: { UAHPerEUR, value },\n  };\n}\n\nexport function fetchUSDSaleRate(url, checkedCurrency) {\n  return (dispatch) => {\n    fetch(url, {\n      mode: 'no-cors',\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then((currencyData) => {\n        const currencySale = currencyData.map((currency) => {\n          // See more details on this 'ccy' meaning: https://api.privatbank.ua/#p24/exchange\n          if (currency.ccy === 'USD') {\n            return Number(currency.sale);\n          }\n          return currency;\n        });\n        return currencySale;\n      })\n      .then((currencySale) => {\n        const USDSaleRate = currencySale[0];\n        dispatch(convertUAHToUSD(USDSaleRate, checkedCurrency));\n      })\n      .catch(() => { });\n  };\n}\n\n\nexport function fetchEURSaleRate(url, checkedCurrency) {\n  return (dispatch) => {\n    fetch(url, {\n      mode: 'no-cors',\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then((currencyData) => {\n        const currencySale = currencyData.map((currency) => {\n          // See more details on this 'ccy' meaning: https://api.privatbank.ua/#p24/exchange\n          if (currency.ccy === 'EUR') {\n            return Number(currency.sale);\n          }\n          return currency;\n        });\n        return currencySale;\n      })\n      .then((currencySale) => {\n        const EURSaleRate = currencySale[1];\n        dispatch(convertUAHToEUR(EURSaleRate, checkedCurrency));\n      })\n      .catch(() => { });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ListGroup from '../../components/list-group/ListGroup';\nimport ListGroupItem from '../../components/list-group/ListGroupItem';\nimport RadioButton from '../../components/radio-button/RadioButton';\nimport RadioButtonGroup from '../../components/radio-button-group/RadioButtonGroup';\n\nimport chooseCurrency from '../../actions/chooseCurrency';\nimport { fetchUSDSaleRate, fetchEURSaleRate } from '../../actions/convertCurrency';\n\nclass CurrencyBlockContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n  }\n\n  handleCurrencyChange(event) {\n    const { changeCurrency, convertPriceToUSD, convertPriceToEUR } = this.props;\n    const currencyExchangeAPIUrl = 'https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11';\n\n    changeCurrency(event.target.value);\n    convertPriceToUSD(`${currencyExchangeAPIUrl}`, event.target.value);\n    convertPriceToEUR(`${currencyExchangeAPIUrl}`, event.target.value);\n  }\n\n  render() {\n    const { currency } = this.props;\n\n    return (\n      <RadioButtonGroup>\n        <ListGroup horizontal>\n          {currency.map(item => (\n            <ListGroupItem key={item.id}>\n              <RadioButton\n                id={item.id}\n                type=\"radio\"\n                name={item.name}\n                value={item.value}\n                label={item.label}\n                checked={item.checked}\n                onChange={this.handleCurrencyChange}\n                simpleButtonView\n              />\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </RadioButtonGroup>\n    );\n  }\n}\n\nCurrencyBlockContainer.propTypes = {\n  currency: PropTypes.arrayOf(PropTypes.object),\n  changeCurrency: PropTypes.func,\n  convertPriceToUSD: PropTypes.func,\n  convertPriceToEUR: PropTypes.func,\n};\n\nCurrencyBlockContainer.defaultProps = {\n  currency: [],\n  changeCurrency: () => { },\n  convertPriceToUSD: () => { },\n  convertPriceToEUR: () => { },\n};\n\nfunction mapStateToProps({ currency }) {\n  return {\n    currency: currency.currency,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeCurrency: value => dispatch(chooseCurrency(value)),\n    convertPriceToUSD: (url, value) => dispatch(fetchUSDSaleRate(url, value)),\n    convertPriceToEUR: (url, value) => dispatch(fetchEURSaleRate(url, value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyBlockContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Checkbox.css';\n\nfunction Checkbox({\n  id, type = 'checkbox', className, name, value, checked = false, onChange, label, ...attrs\n}) {\n  const classes = classNames(\n    'input-checkbox-default',\n    className,\n  );\n\n  return (\n    <label htmlFor={id} className=\"input-label\">\n      <input\n        id={id}\n        type={type}\n        className={classes}\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        {...attrs}\n      />\n      <span className=\"check-box\" />\n      {label}\n    </label>\n  );\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  type: 'checkbox',\n  className: '',\n  name: '',\n  value: '',\n  checked: false,\n  onChange: () => {},\n  label: 'Default label',\n};\n\nexport default Checkbox;\n","const TICKETS = [{\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '16:20',\n  arrival_date: '12.05.18',\n  arrival_time: '22:10',\n  carrier: 'TK',\n  stops: 3,\n  price: 12400,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '17:20',\n  arrival_date: '12.05.18',\n  arrival_time: '23:50',\n  carrier: 'LH',\n  stops: 1,\n  price: 13100,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '12:10',\n  arrival_date: '12.05.18',\n  arrival_time: '18:10',\n  carrier: 'EI',\n  stops: 0,\n  price: 15300,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '17:00',\n  arrival_date: '12.05.18',\n  arrival_time: '23:30',\n  carrier: 'TK',\n  stops: 2,\n  price: 11000,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '12:10',\n  arrival_date: '12.05.18',\n  arrival_time: '20:15',\n  carrier: 'BA',\n  stops: 3,\n  price: 13400,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '9:40',\n  arrival_date: '12.05.18',\n  arrival_time: '19:25',\n  carrier: 'LY',\n  stops: 3,\n  price: 12450,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '17:10',\n  arrival_date: '12.05.18',\n  arrival_time: '23:45',\n  carrier: 'TK',\n  stops: 1,\n  price: 13600,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '6:10',\n  arrival_date: '12.05.18',\n  arrival_time: '15:25',\n  carrier: 'TK',\n  stops: 0,\n  price: 14250,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '16:50',\n  arrival_date: '12.05.18',\n  arrival_time: '23:35',\n  carrier: 'FR',\n  stops: 1,\n  price: 16700,\n}, {\n  origin: 'UKHH',\n  origin_name: 'Харків',\n  destination: 'TLV',\n  destination_name: 'Тель-Авив',\n  departure_date: '12.05.18',\n  departure_time: '6:10',\n  arrival_date: '12.05.18',\n  arrival_time: '16:15',\n  carrier: 'DL',\n  stops: 0,\n  price: 17400,\n},\n];\n\nexport default TICKETS;\n","import {\n  REQUEST_FLIGHTS,\n  RECEIVE_FLIGHTS_MOCK,\n  RECEIVE_AIRLINE_LOGO,\n} from '../constants/actionTypes';\nimport TICKETS from '../data/tickets-array';\n\n// Action creator for mock data\nexport function getFlightsMock(flights) {\n  return {\n    type: RECEIVE_FLIGHTS_MOCK,\n    payload: flights,\n  };\n}\n\n// export function requestFlightsMock() {\n//   return dispatch => dispatch(getFlightsMock(TICKETS));\n// }\n\nexport const requestFlightsMock = () => (dispatch) => {\n  setTimeout(() => {\n    dispatch(getFlightsMock(TICKETS));\n  }, 5000);\n};\n\nexport function requestFlights(flights) {\n  return {\n    type: REQUEST_FLIGHTS,\n    payload: flights,\n  };\n}\n\nexport function fetchFlights(url) {\n  return (dispatch) => {\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(flights => dispatch(requestFlights(flights)))\n      .catch(() => { });\n  };\n}\n\n\nexport function receiveAirlineLogo(airlineLogo) {\n  return {\n    type: RECEIVE_AIRLINE_LOGO,\n    payload: airlineLogo,\n  };\n}\n\nexport function fetchAirlineLogo(url) {\n  return (dispatch) => {\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => dispatch(receiveAirlineLogo(response.url)))\n      .catch(() => { });\n  };\n}\n","import { FLIGHT_CONDITION_CHOICE } from '../constants/actionTypes';\n\nfunction flightConditionChoice(checked, value) {\n  return {\n    type: FLIGHT_CONDITION_CHOICE,\n    payload: {\n      checked,\n      value,\n    },\n  };\n}\n\nexport default flightConditionChoice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ListGroup from '../../components/list-group/ListGroup';\nimport ListGroupItem from '../../components/list-group/ListGroupItem';\nimport Checkbox from '../../components/checkbox/Checkbox';\n\nimport { requestFlightsMock } from '../../actions/requestFlights';\nimport flightConditionChoice from '../../actions/chooseFlights';\n\nclass FlightStopsFilterContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFlightStopsChange = this.handleFlightStopsChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData();\n  }\n\n  handleFlightStopsChange(event) {\n    const { flightStopsFilter } = this.props;\n    const isChecked = event.target.checked;\n    const itemValue = event.target.value;\n\n    flightStopsFilter(isChecked, itemValue);\n  }\n\n  render() {\n    const { flightSearchConditions } = this.props;\n\n    return (\n      <ListGroup>\n        {flightSearchConditions.map(item => (\n          <ListGroupItem key={item.id} className=\"flight-stops-filter-item\">\n            <Checkbox\n              id={item.id}\n              name={item.name}\n              value={item.value}\n              label={item.label}\n              checked={item.checked}\n              onChange={this.handleFlightStopsChange}\n            />\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    );\n  }\n}\n\nFlightStopsFilterContainer.propTypes = {\n  fetchData: PropTypes.func,\n  flightSearchConditions: PropTypes.arrayOf(PropTypes.object),\n  flightStopsFilter: PropTypes.func,\n};\n\nFlightStopsFilterContainer.defaultProps = {\n  fetchData: () => { },\n  flightSearchConditions: [],\n  flightStopsFilter: () => { },\n};\n\nfunction mapStateToProps({ flightSearchConditions }) {\n  return {\n    flightSearchConditions: flightSearchConditions.flightSearchConditions,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => dispatch(requestFlightsMock()),\n    flightStopsFilter: (checked, value) => dispatch(flightConditionChoice(checked, value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightStopsFilterContainer);\n","import React from 'react';\nimport CurrencyBlockContainer from '../../containers/currency-block-container/CurrencyBlockContainer';\nimport FlightStopsFilterContainer from '../../containers/filters-container/FlightStopsFilterContainer';\n\nimport './Aside.css';\n\nfunction Aside() {\n  return (\n    <aside className=\"layout-aside\">\n      <fieldset className=\"currency-select-field\">\n        <legend>Валюта</legend>\n        <CurrencyBlockContainer />\n      </fieldset>\n      <fieldset className=\"transfer-select-field check-transfer-list\">\n        <legend className=\"transfer-filter-legend\">Кількість пересадок</legend>\n        <FlightStopsFilterContainer />\n      </fieldset>\n    </aside>\n  );\n}\n\nexport default Aside;\n","import { TOGGLE_FLIGHTS_SORT_FILTER } from '../constants/actionTypes';\n\nfunction toggleFlightsSortFilter(value) {\n  return {\n    type: TOGGLE_FLIGHTS_SORT_FILTER,\n    payload: { value },\n  };\n}\n\nexport default toggleFlightsSortFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ListGroup from '../../components/list-group/ListGroup';\nimport ListGroupItem from '../../components/list-group/ListGroupItem';\nimport RadioButton from '../../components/radio-button/RadioButton';\nimport RadioButtonGroup from '../../components/radio-button-group/RadioButtonGroup';\n\nimport toggleFlightsSortFilter from '../../actions/toggleFligtsSortFilter';\n\nclass FlightSortFilterContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFlightsSortChange = this.handleFlightsSortChange.bind(this);\n  }\n\n  handleFlightsSortChange(event) {\n    const { toggleSortFilter } = this.props;\n    toggleSortFilter(event.target.value);\n  }\n\n  render() {\n    const { flightSortFilter } = this.props;\n\n    return (\n      <RadioButtonGroup>\n        <ListGroup horizontal>\n          {flightSortFilter.map(item => (\n            <ListGroupItem key={item.id}>\n              <RadioButton\n                id={item.id}\n                type=\"radio\"\n                name={item.name}\n                value={item.value}\n                label={item.label}\n                checked={item.checked}\n                onChange={this.handleFlightsSortChange}\n                className=\"flight-sort-filter-btn\"\n                simpleButtonView\n              />\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </RadioButtonGroup>\n    );\n  }\n}\n\nFlightSortFilterContainer.propTypes = {\n  flightSortFilter: PropTypes.arrayOf(PropTypes.object),\n  toggleSortFilter: PropTypes.func,\n};\n\nFlightSortFilterContainer.defaultProps = {\n  flightSortFilter: [],\n  toggleSortFilter: () => { },\n};\n\nfunction mapStateToProps({ flightSortFilter }) {\n  return {\n    flightSortFilter: flightSortFilter.flightSortFilter,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggleSortFilter: value => dispatch(toggleFlightsSortFilter(value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightSortFilterContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\nimport './Preloader.css';\n\nimport preloaderIcon from '../../icons/engine.svg';\n\nfunction Preloader({\n  className, src, ...attrs\n}) {\n  const classes = classNames(\n    'preloader',\n    className,\n  );\n\n  return (\n    <div\n      className={classes}\n      {...attrs}\n    >\n      <Icon src={preloaderIcon} alt=\"preloader-icon\" className=\"preloader-icon\" />\n      <p className=\"preloader-text\">Шукаємо авіаквитки</p>\n    </div>\n  );\n}\n\nPreloader.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string,\n};\n\nPreloader.defaultProps = {\n  className: '',\n  src: '',\n};\n\n\nexport default Preloader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Button.css';\n\nfunction Button({\n  children, className, onClick, disabled, active, ...attrs\n}) {\n  const onClickAction = (e) => {\n    if (disabled) {\n      e.preventDefault();\n    }\n    return onClick(e);\n  };\n\n  const classes = classNames(\n    'btn-default',\n    className,\n  );\n\n  const Tag = attrs.href ? 'a' : 'button';\n\n  return (\n    <Tag\n      className={classes}\n      onClick={onClickAction}\n      disabled={disabled}\n      {...attrs}\n    >\n      {children}\n    </Tag>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  children: 'Default button',\n  className: '',\n  onClick: () => { },\n  disabled: false,\n  active: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from '../icon/Icon';\nimport Button from '../button/Button';\n\nimport './FlightCard.css';\n\nfunction FlightCard({\n  className,\n  src,\n  price,\n  currencySymbol,\n  origin,\n  originName,\n  departureTime,\n  departureDate,\n  stops,\n  arrivalTime,\n  arrivalDate,\n  destination,\n  destinationName,\n}) {\n  const classes = classNames(\n    'flight-card',\n    className,\n  );\n\n  let transferCount;\n\n  if (stops === 0) {\n    transferCount = <span />;\n  } else if (stops === 1) {\n    transferCount = (\n      <span>\n        {stops}\n        {' '}\n        пересадка\n      </span>\n    );\n  } else {\n    transferCount = (\n      <span>\n        {stops}\n        {' '}\n        пересадки\n      </span>\n    );\n  }\n\n  return (\n    <div className={classes}>\n      <div className=\"flight-card-aside\">\n        <Icon\n          className=\"airline-logo\"\n          src={src}\n          alt=\"Airline logo\"\n        />\n        <Button className=\"flight-card-buy-btn\">\n          <span>\n            Купити за\n            {' '}\n            {price}\n            {currencySymbol}\n          </span>\n        </Button>\n      </div>\n      <div className=\"flight-card-main\">\n        <div className=\"departure-info-block\">\n          <p className=\"flight-card-time\">{departureTime}</p>\n          <p className=\"flight-card-airport-name\">\n            <span>\n              {origin}\n              ,\n              {originName}\n            </span>\n          </p>\n          <p className=\"flight-card-date\">{departureDate}</p>\n        </div>\n        <div className=\"transfer-info-block\">\n          {transferCount}\n        </div>\n        <div className=\"arrival-info-block\">\n          <p className=\"flight-card-time\">{arrivalTime}</p>\n          <p className=\"flight-card-airport-name\">\n            {destinationName}\n            ,\n            <span>{destination}</span>\n          </p>\n          <p className=\"flight-card-date\">{arrivalDate}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFlightCard.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string,\n  price: PropTypes.number,\n  currencySymbol: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  origin: PropTypes.string,\n  originName: PropTypes.string,\n  departureTime: PropTypes.string,\n  departureDate: PropTypes.string,\n  stops: PropTypes.number,\n  arrivalTime: PropTypes.string,\n  arrivalDate: PropTypes.string,\n  destination: PropTypes.string,\n  destinationName: PropTypes.string,\n};\n\nFlightCard.defaultProps = {\n  className: '',\n  src: 'https://daisycon.io/images/airline/?width=300&height=150&color=ffffff&iata=lh',\n  price: 0,\n  currencySymbol: '',\n  origin: '',\n  originName: '',\n  departureTime: '',\n  departureDate: '',\n  stops: 0,\n  arrivalTime: '',\n  arrivalDate: '',\n  destination: '',\n  destinationName: '',\n};\n\nexport default FlightCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\nimport './InfoCard.css';\n\nfunction InfoCard({\n  className, src, flightsQuantity, children, ...attrs\n}) {\n  const classes = classNames(\n    'info-card',\n    className,\n  );\n\n  let infoHeaderMessage;\n\n  if (flightsQuantity === 0) {\n    infoHeaderMessage = (\n      <>\n        На жаль, за вашим запитом не знайдено рейсів.\n        {' '}\n      </>\n    );\n  } else if (flightsQuantity === 1) {\n    infoHeaderMessage = (\n      <>\n        Ми знайшли\n        {' '}\n        {flightsQuantity}\n        {' '}\n        рейс, але він не відповідає заданим фільтрам.\n      </>\n    );\n  } else if (flightsQuantity > 4) {\n    infoHeaderMessage = (\n      <>\n        Ми знайшли\n        {' '}\n        {flightsQuantity}\n        {' '}\n        рейсів, але жоден не відповідає заданим фільтрам.\n      </>\n    );\n  } else {\n    infoHeaderMessage = (\n      <>\n        Ми знайшли\n        {' '}\n        {flightsQuantity}\n        {' '}\n        рейси, але жоден не відповідає заданим фільтрам.\n      </>\n    );\n  }\n\n  return (\n    <div\n      className={classes}\n      {...attrs}\n    >\n      <div className=\"info-card-aside\">\n        <Icon\n          className=\"info-card-icon\"\n          src={src}\n          alt=\"Info icon\"\n        />\n      </div>\n      <div className=\"info-card-main\">\n        <h1 className=\"info-card-heading\">\n          {infoHeaderMessage}\n        </h1>\n        {flightsQuantity === 0\n          ? <p>Спробуйте змінити дати або побудувати альтернативний маршрут.</p>\n          : <p>Будь ласка, виберіть кількість пересадок</p>\n        }\n        {children}\n      </div>\n    </div>\n  );\n}\n\nInfoCard.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string,\n  flightsQuantity: PropTypes.number,\n  children: PropTypes.node,\n};\n\nInfoCard.defaultProps = {\n  className: '',\n  src: '',\n  flightsQuantity: 0,\n  children: null,\n};\n\n\nexport default InfoCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uuidv1 from 'uuid/v1';\nimport Preloader from '../../components/preloader/Preloader';\nimport ListGroup from '../../components/list-group/ListGroup';\nimport ListGroupItem from '../../components/list-group/ListGroupItem';\nimport FlightCard from '../../components/flight-card/FlightCard';\nimport InfoCard from '../../components/info-card/InfoCard';\n\nimport { requestFlightsMock } from '../../actions/requestFlights';\n\nimport infoIcon from '../../icons/info-icon.svg';\n\nclass FlightCardContainer extends React.Component {\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData();\n  }\n\n  render() {\n    const {\n      currency, flightSearchConditions, flightVariants, isFlightVariantsReceived,\n    } = this.props;\n\n    const airlineLogoUrl = 'https://daisycon.io/images/airline/';\n    const airlineLogoWidth = '300';\n    const airlineLogoHeight = '150';\n    const airlineLogoBgColor = 'ffffff';\n\n    // eslint-disable-next-line max-len\n    const ticketsList = flightVariants.filter(ticket => flightSearchConditions.some(item => ticket.stops === item.stops && item.checked));\n\n    const notCheckedFlights = flightSearchConditions.filter(item => !item.checked);\n\n    if (!isFlightVariantsReceived) {\n      return (\n        <Preloader />\n      );\n    }\n\n    if (notCheckedFlights.length === flightSearchConditions.length || flightVariants.length === 0) {\n      return (\n        <InfoCard\n          src={infoIcon}\n          flightsQuantity={flightVariants.length}\n        />\n      );\n    }\n\n    return (\n      <ListGroup>\n        {ticketsList.map(item => (\n          <ListGroupItem key={uuidv1()}>\n            <FlightCard\n              src={`${airlineLogoUrl}?width=${airlineLogoWidth}&height=${airlineLogoHeight}&color=${airlineLogoBgColor}&iata=${item.carrier}`}\n              price={item.price}\n              currencySymbol={currency.map(\n                i => i.checked && i.currencyUnicodeSymbol,\n              )}\n              origin={item.origin}\n              originName={item.origin_name}\n              departureTime={item.departure_time}\n              departureDate={item.departure_date}\n              stops={item.stops}\n              arrivalTime={item.arrival_time}\n              arrivalDate={item.arrival_date}\n              destination={item.destination}\n              destinationName={item.destination_name}\n            />\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    );\n  }\n}\n\nFlightCardContainer.propTypes = {\n  fetchData: PropTypes.func,\n  currency: PropTypes.arrayOf(PropTypes.object),\n  flightSearchConditions: PropTypes.arrayOf(PropTypes.object),\n  flightVariants: PropTypes.arrayOf(PropTypes.object),\n  isFlightVariantsReceived: PropTypes.bool,\n};\n\nFlightCardContainer.defaultProps = {\n  fetchData: () => { },\n  currency: [],\n  flightSearchConditions: [],\n  flightVariants: [],\n  isFlightVariantsReceived: false,\n};\n\nfunction mapStateToProps({ currency, flightSearchConditions, flightVariants }) {\n  return {\n    currency: currency.currency,\n    flightSearchConditions: flightSearchConditions.flightSearchConditions,\n    flightVariants: flightVariants.flights,\n    isFlightVariantsReceived: flightVariants.isReceived,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => dispatch(requestFlightsMock()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightCardContainer);\n","import React from 'react';\nimport FlightSortFilterContainer from '../../containers/filters-container/FlightSortFilterContainer';\nimport FlightCardContainer from '../../containers/flight-card-container/FlightCardContainer';\n\nimport './Main.css';\n\nfunction Main() {\n  return (\n    <main className=\"layout-main\">\n      {/* <FlightSortFilterContainer /> */}\n      <FlightCardContainer />\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Icon from '../../components/icon/Icon';\nimport Aside from '../aside/Aside';\nimport Main from '../main/Main';\n\nimport './AppLayout.css';\n\nimport iconLogo from '../../icons/globe.svg';\n\nfunction AppLayout() {\n  return (\n    <div className=\"app-wrapper\">\n      <Icon\n        className=\"app-logo\"\n        src={iconLogo}\n        alt=\"App logo icon\"\n      />\n      <div className=\"row\">\n        <Aside />\n        <Main />\n      </div>\n    </div>\n  );\n}\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './layout/app-layout/AppLayout';\n\nfunction App() {\n  return (\n    <AppLayout />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}